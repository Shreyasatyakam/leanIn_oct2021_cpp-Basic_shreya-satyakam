ques1.
#include <iostream>
using namespace std;
class LS
{
    public:
        void LinearSearch(int arr[], int value, int i, int n)
        {   int found = 0;
            for (i = 0; i < n ; i++)
            {
                if (value == arr[i] )
                {
                    found = 1;
                    break;
                }
            }
            if (found == 1)
            {
                cout<<"Element is present in the array at position   "<<i+1;
            }
            else
            {
                cout<<"Element is not present in the array.";
            }
        }
};
int  main()
{  int num;
    int i,  keynum, found = 0;
    cout<<"Enter the number of elements   ";
    cin>>num;
    int array[num];
    cout<<"Enter the elements one by one \n";
    for (i = 0; i < num; i++)
    {
        cin>> array[i];
    }
    cout<<"Enter the element to be searched   ";
    cin>>keynum;
    /*  Linear search begins */
    LS l1;
    l1.LinearSearch(array,keynum,i,num);
    return 0;
}


ques2.
#include<iostream>
using namespace std;
int binarySearch(int arr[], int p, int r, int num) {
   if (p <= r) {
      int mid = (p + r)/2;
      if (arr[mid] == num)
         return mid ;
      if (arr[mid] > num)
         return binarySearch(arr, p, mid-1, num);
      if (arr[mid] < num)
         return binarySearch(arr, mid+1, r, num);
   }
   return -1;
}
int main(void) {
   int arr[] = {1, 3, 7, 15, 18, 20, 25, 33, 36, 40};
   int n = sizeof(arr)/ sizeof(arr[0]);
   int num;
   cout << "Enter the number to search: \n";
   cin >> num;
   int index = binarySearch (arr, 0, n-1, num);
   if(index == -1){
      cout<< num <<" is not present in the array";
   }else{
      cout<< num <<" is present at index "<< index <<" in the array";
   }
   return 0;
}


ques3.

#include<iostream.h>
#include<conio.h>
void traversal(int A[],int N);
void insertion(int A[],int &N,int Pos,int ITEM);
int lsearch(int A[],int N,int item);
void deletee(int A[],int &N,int Pos,int ITEM );
void main()
{
clrscr();
int a[10],n,pos,item,choice,delitem;
char ch;
cout<<"\n Enter size:";
cin>>n;
cout<<"\n Enter Array:";
for(int i=0;i<n;i++)
cin>>a[i];
do
{
clrscr();
cout<<"\n \t\t Menu Driven Program";
cout<<"\n 1. Traversal \n 2. Insertion \n 3. Deletion \n 4. Searching";
cout<<"\n Enter your choice:";
cin>>choice;
switch(choice)
{
        case 1: traversal(a,n);
                break;
        case 2: //Insertion
                cout<<"\n Enter Position:";
                cin>>pos;
                cout<<"\nEnter Element:";
                cin>>item;
                insertion(a,n,pos,item);
                break;
        case 3: cout<<"\n Enter Element to be deleted:";
                cin>>delitem;
                pos=lsearch(a,n,delitem);
                if(pos==-1)
                {
                cout<<"\n Element not found";
                }
                deletee(a,n,pos,delitem);
                break;
        case 4: cout<<"\n Enter the element to be searched";
                cin>>item;
                pos=lsearch(a,n,item);
                cout<<"\n Element found at index:"<<pos;
                cout<<"\n Element found at position"<<pos+1;
                break;
        default:cout<<"wrong choice";
        }
        cout<<"\n Do you want to continue?";
        cout<<"(Press y/n)";
        cin>>ch;
        }while(ch=='y');
getch();
}
void traversal(int b[],int N)
{
for(int i=0;i<N;i++)
cout<<b[i]<<" ";
}
// Insertion of element into a linear array with functions in c++
void insertion(int A[],int &N,int Pos,int ITEM)
{
for(int i=N;i>=Pos;i--)
A[i+1]=A[i];
A[Pos]=ITEM;
N=N+1;
}
// Deletion of element from linear array with functions in c++
void deletee(int A[],int &N,int Pos,int ITEM)
{
for(int i=Pos;i<N;i++)
A[i]=A[i+1];
N=N-1;
cout<<ITEM<<" is deleted from the array.";
}
int lsearch(int A[],int N,int ITEM)
{
int index=-1;
for(int i=0;i<N;i++)
{
if(A[i]==ITEM)
{
index=i;
}
}
return index;
}


ques4.
#include<iostream>
using namespace std;
int main()
{
    int i, j, k;
    int threeDimArr[3][4][2] = {
        { {1, 2}, {3, 4}, {5, 6}, {7, 8} },
        { {9, 8}, {7, 6}, {5, 4}, {3, 2} },
        { {0, 3}, {5, 7}, {9, 2}, {4, 6} }
        };
    for(i=0; i<3; i++)
    {
        for(j=0; j<4; j++)
        {
            for(k=0; k<2; k++)
                cout<<threeDimArr[i][j][k]<<"  ";
            cout<<endl;
        }
        cout<<endl;
    }
    cout<<endl;
    return 0;
}
